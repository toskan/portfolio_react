{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tam\\\\Desktop\\\\portfolio\\\\my-app\\\\src\\\\ImageHover.js\";\nimport React, { useState } from 'react';\nimport { IoMdSearch } from 'react-icons/io';\nimport PropTypes from 'prop-types';\n\nconst ImageHover = props => {\n  const {\n    setIsModalOpen,\n    work,\n    i,\n    getIndex,\n    isModalOpen\n  } = props;\n  const [magnifyShow, setMagnifyShow] = useState(false);\n\n  if (isModalOpen) {\n    document.getElementById('root').classList.toggle('opaque');\n    document.getElementById('root').style.opacity = 0.1;\n  }\n\n  if (!isModalOpen) {\n    document.getElementById('root').style.opacity = 1;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n    src: work,\n    data: i,\n    alt: \"project-screenshot\",\n    className: \"grid-img\",\n    onMouseOver: () => setMagnifyShow(true),\n    onMouseLeave: () => setMagnifyShow(false),\n    onClick: () => {\n      getIndex(i);\n      setTimeout(function () {\n        setIsModalOpen(prev => !prev);\n      }, 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 4\n    }\n  }), magnifyShow && /*#__PURE__*/React.createElement(IoMdSearch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 20\n    }\n  }));\n};\n\nImageHover.propTypes = {\n  isModalOpen: PropTypes.bool.isRequired,\n  setIsModalOpen: PropTypes.func.isRequired,\n  getIndex: PropTypes.func.isRequired,\n  i: PropTypes.number.isRequired,\n  work: PropTypes.string.isRequired\n};\nexport default ImageHover;","map":{"version":3,"sources":["C:/Users/tam/Desktop/portfolio/my-app/src/ImageHover.js"],"names":["React","useState","IoMdSearch","PropTypes","ImageHover","props","setIsModalOpen","work","i","getIndex","isModalOpen","magnifyShow","setMagnifyShow","document","getElementById","classList","toggle","style","opacity","setTimeout","prev","propTypes","bool","isRequired","func","number","string"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC7B,QAAM;AAAEC,IAAAA,cAAF;AAAkBC,IAAAA,IAAlB;AAAwBC,IAAAA,CAAxB;AAA2BC,IAAAA,QAA3B;AAAqCC,IAAAA;AAArC,MAAqDL,KAA3D;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,KAAD,CAA9C;;AACA,MAAIS,WAAJ,EAAiB;AAChBG,IAAAA,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,SAAhC,CAA0CC,MAA1C,CAAiD,QAAjD;AACAH,IAAAA,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCG,KAAhC,CAAsCC,OAAtC,GAAgD,GAAhD;AACA;;AACD,MAAI,CAACR,WAAL,EAAkB;AACjBG,IAAAA,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCG,KAAhC,CAAsCC,OAAtC,GAAgD,CAAhD;AACA;;AACD,sBACC,uDACC;AACC,IAAA,GAAG,EAAEX,IADN;AAEC,IAAA,IAAI,EAAEC,CAFP;AAGC,IAAA,GAAG,EAAC,oBAHL;AAIC,IAAA,SAAS,EAAC,UAJX;AAKC,IAAA,WAAW,EAAE,MAAMI,cAAc,CAAC,IAAD,CALlC;AAMC,IAAA,YAAY,EAAE,MAAMA,cAAc,CAAC,KAAD,CANnC;AAOC,IAAA,OAAO,EAAE,MAAM;AACdH,MAAAA,QAAQ,CAACD,CAAD,CAAR;AACAW,MAAAA,UAAU,CAAC,YAAY;AACtBb,QAAAA,cAAc,CAAEc,IAAD,IAAU,CAACA,IAAZ,CAAd;AACA,OAFS,EAEP,CAFO,CAAV;AAGA,KAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAeET,WAAW,iBAAI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfjB,CADD;AAmBA,CA7BD;;AA+BAP,UAAU,CAACiB,SAAX,GAAuB;AACtBX,EAAAA,WAAW,EAAEP,SAAS,CAACmB,IAAV,CAAeC,UADN;AAEtBjB,EAAAA,cAAc,EAAEH,SAAS,CAACqB,IAAV,CAAeD,UAFT;AAGtBd,EAAAA,QAAQ,EAAEN,SAAS,CAACqB,IAAV,CAAeD,UAHH;AAItBf,EAAAA,CAAC,EAAEL,SAAS,CAACsB,MAAV,CAAiBF,UAJE;AAKtBhB,EAAAA,IAAI,EAAEJ,SAAS,CAACuB,MAAV,CAAiBH;AALD,CAAvB;AAQA,eAAenB,UAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { IoMdSearch } from 'react-icons/io';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageHover = (props) => {\r\n\tconst { setIsModalOpen, work, i, getIndex, isModalOpen } = props;\r\n\tconst [magnifyShow, setMagnifyShow] = useState(false);\r\n\tif (isModalOpen) {\r\n\t\tdocument.getElementById('root').classList.toggle('opaque');\r\n\t\tdocument.getElementById('root').style.opacity = 0.1;\r\n\t}\r\n\tif (!isModalOpen) {\r\n\t\tdocument.getElementById('root').style.opacity = 1;\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<img\r\n\t\t\t\tsrc={work}\r\n\t\t\t\tdata={i}\r\n\t\t\t\talt=\"project-screenshot\"\r\n\t\t\t\tclassName=\"grid-img\"\r\n\t\t\t\tonMouseOver={() => setMagnifyShow(true)}\r\n\t\t\t\tonMouseLeave={() => setMagnifyShow(false)}\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tgetIndex(i);\r\n\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\tsetIsModalOpen((prev) => !prev);\r\n\t\t\t\t\t}, 1);\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t{magnifyShow && <IoMdSearch />}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nImageHover.propTypes = {\r\n\tisModalOpen: PropTypes.bool.isRequired,\r\n\tsetIsModalOpen: PropTypes.func.isRequired,\r\n\tgetIndex: PropTypes.func.isRequired,\r\n\ti: PropTypes.number.isRequired,\r\n\twork: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ImageHover;\r\n"]},"metadata":{},"sourceType":"module"}
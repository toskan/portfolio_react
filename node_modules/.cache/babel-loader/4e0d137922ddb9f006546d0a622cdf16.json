{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tam\\\\Desktop\\\\portfolio\\\\my-app\\\\src\\\\ModalComponent.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types'; // import FocusTrap from 'focus-trap-react';\n// import { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nconst modalMount = document.getElementById('modalMount');\n\nconst Modal = props => {\n  const {\n    isModalOpen,\n    setIsModalOpen,\n    size = 'medium'\n  } = props;\n  return ReactDOM.createPortal( /*#__PURE__*/React.createElement(\"div\", {\n    id: \"modal-slides\",\n    className: \"modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 3\n    }\n  }, isModalOpen && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, props.children)), modalMount);\n};\n\nModal.propTypes = {\n  isModalOpen: PropTypes.bool.isRequired,\n  setIsModalOpen: PropTypes.func.isRequired,\n  size: PropTypes.oneOf(['small', 'medium', 'large'])\n};\nexport default Modal;","map":{"version":3,"sources":["C:/Users/tam/Desktop/portfolio/my-app/src/ModalComponent.js"],"names":["React","ReactDOM","PropTypes","modalMount","document","getElementById","Modal","props","isModalOpen","setIsModalOpen","size","createPortal","children","propTypes","bool","isRequired","func","oneOf"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;AACA;;AAEA,MAAMC,UAAU,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAnB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACxB,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,cAAf;AAA+BC,IAAAA,IAAI,GAAG;AAAtC,MAAmDH,KAAzD;AACA,SAAON,QAAQ,CAACU,YAAT,eACN;AAAK,IAAA,EAAE,EAAC,cAAR;AAAuB,IAAA,SAAS,EAAC,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEH,WAAW,iBACX;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCD,KAAK,CAACK,QAAtC,CAFF,CADM,EAMNT,UANM,CAAP;AAQA,CAVD;;AAYAG,KAAK,CAACO,SAAN,GAAkB;AACjBL,EAAAA,WAAW,EAAEN,SAAS,CAACY,IAAV,CAAeC,UADX;AAEjBN,EAAAA,cAAc,EAAEP,SAAS,CAACc,IAAV,CAAeD,UAFd;AAGjBL,EAAAA,IAAI,EAAER,SAAS,CAACe,KAAV,CAAgB,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,CAAhB;AAHW,CAAlB;AAMA,eAAeX,KAAf","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n// import FocusTrap from 'focus-trap-react';\r\n// import { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\nconst modalMount = document.getElementById('modalMount');\r\n\r\nconst Modal = (props) => {\r\n\tconst { isModalOpen, setIsModalOpen, size = 'medium' } = props;\r\n\treturn ReactDOM.createPortal(\r\n\t\t<div id=\"modal-slides\" className=\"modal\">\r\n\t\t\t{isModalOpen && (\r\n\t\t\t\t<div className=\"modal-content\">{props.children}</div>\r\n\t\t\t)}\r\n\t\t</div>,\r\n\t\tmodalMount\r\n\t);\r\n};\r\n\r\nModal.propTypes = {\r\n\tisModalOpen: PropTypes.bool.isRequired,\r\n\tsetIsModalOpen: PropTypes.func.isRequired,\r\n\tsize: PropTypes.oneOf(['small', 'medium', 'large']),\r\n};\r\n\r\nexport default Modal;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import React from'react';import ReactDOM from'react-dom';import FocusTrap from'focus-trap-react';import{CSSTransition,TransitionGroup}from'react-transition-group';var modalMount=document.getElementById('modalMount');var ModalComponent=function ModalComponent(props){var isModalOpen=props.isModalOpen,toggleModalOpen=props.toggleModalOpen,setArrIdx=props.setArrIdx;var closeButtonFunction=function closeButtonFunction(){toggleModalOpen();setArrIdx(0);};return ReactDOM.createPortal(/*#__PURE__*/React.createElement(TransitionGroup,{component:null},isModalOpen&&/*#__PURE__*/React.createElement(CSSTransition,{classNames:\"modal\",in:true,appear:true,timeout:500,key:\"\".concat(Date.now())},/*#__PURE__*/React.createElement(FocusTrap,null,/*#__PURE__*/React.createElement(\"div\",{id:\"modal-slides\",className:\"modal\",onKeyDown:function onKeyDown(e){if(e.key==='Escape'){toggleModalOpen();}}},/*#__PURE__*/React.createElement(\"span\",{className:\"button-display-topright\",role:\"button\",\"aria-label\":\"Close Button\",tabIndex:0,onClick:closeButtonFunction,onKeyPress:function onKeyPress(e){if(e.key==='Enter'){toggleModalOpen();}}},\"\\xD7\"),isModalOpen&&/*#__PURE__*/React.createElement(\"div\",{className:\"modal-content\"},props.children))))),modalMount);};export default ModalComponent;","map":{"version":3,"sources":["C:/Users/tam/Desktop/portfolio_react/src/ModalComponent.js"],"names":["React","ReactDOM","FocusTrap","CSSTransition","TransitionGroup","modalMount","document","getElementById","ModalComponent","props","isModalOpen","toggleModalOpen","setArrIdx","closeButtonFunction","createPortal","Date","now","e","key","children"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CAEA,MAAOC,CAAAA,SAAP,KAAsB,kBAAtB,CACA,OAASC,aAAT,CAAwBC,eAAxB,KAA+C,wBAA/C,CAEA,GAAMC,CAAAA,UAAU,CAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAnB,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,CAAW,IACzBC,CAAAA,WADyB,CACmBD,KADnB,CACzBC,WADyB,CACZC,eADY,CACmBF,KADnB,CACZE,eADY,CACKC,SADL,CACmBH,KADnB,CACKG,SADL,CAEjC,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,EAAM,CACjCF,eAAe,GACfC,SAAS,CAAC,CAAD,CAAT,CACA,CAHD,CAIA,MAAOX,CAAAA,QAAQ,CAACa,YAAT,cACN,oBAAC,eAAD,EAAiB,SAAS,CAAE,IAA5B,EACEJ,WAAW,eACX,oBAAC,aAAD,EACC,UAAU,CAAC,OADZ,CAEC,EAAE,KAFH,CAGC,MAAM,CAAE,IAHT,CAIC,OAAO,CAAE,GAJV,CAKC,GAAG,WAAKK,IAAI,CAACC,GAAL,EAAL,CALJ,eAOC,oBAAC,SAAD,mBACC,2BACC,EAAE,CAAC,cADJ,CAEC,SAAS,CAAC,OAFX,CAGC,SAAS,CAAE,mBAACC,CAAD,CAAO,CACjB,GAAIA,CAAC,CAACC,GAAF,GAAU,QAAd,CAAwB,CACvBP,eAAe,GACf,CACD,CAPF,eASC,4BACC,SAAS,CAAC,yBADX,CAEC,IAAI,CAAC,QAFN,CAGC,aAAW,cAHZ,CAIC,QAAQ,CAAE,CAJX,CAKC,OAAO,CAAEE,mBALV,CAMC,UAAU,CAAE,oBAACI,CAAD,CAAO,CAClB,GAAIA,CAAC,CAACC,GAAF,GAAU,OAAd,CAAuB,CACtBP,eAAe,GACf,CACD,CAVF,SATD,CAuBED,WAAW,eACX,2BAAK,SAAS,CAAC,eAAf,EACED,KAAK,CAACU,QADR,CAxBF,CADD,CAPD,CAFF,CADM,CA4CNd,UA5CM,CAAP,CA8CA,CApDD,CA2DA,cAAeG,CAAAA,cAAf","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport FocusTrap from 'focus-trap-react';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\nconst modalMount = document.getElementById('modalMount');\r\n\r\nconst ModalComponent = (props) => {\r\n\tconst { isModalOpen, toggleModalOpen, setArrIdx } = props;\r\n\tconst closeButtonFunction = () => {\r\n\t\ttoggleModalOpen();\r\n\t\tsetArrIdx(0);\r\n\t};\r\n\treturn ReactDOM.createPortal(\r\n\t\t<TransitionGroup component={null}>\r\n\t\t\t{isModalOpen && (\r\n\t\t\t\t<CSSTransition\r\n\t\t\t\t\tclassNames=\"modal\"\r\n\t\t\t\t\tin\r\n\t\t\t\t\tappear={true}\r\n\t\t\t\t\ttimeout={500}\r\n\t\t\t\t\tkey={`${Date.now()}`}\r\n\t\t\t\t>\r\n\t\t\t\t\t<FocusTrap>\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tid=\"modal-slides\"\r\n\t\t\t\t\t\t\tclassName=\"modal\"\r\n\t\t\t\t\t\t\tonKeyDown={(e) => {\r\n\t\t\t\t\t\t\t\tif (e.key === 'Escape') {\r\n\t\t\t\t\t\t\t\t\ttoggleModalOpen();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\tclassName=\"button-display-topright\"\r\n\t\t\t\t\t\t\t\trole=\"button\"\r\n\t\t\t\t\t\t\t\taria-label=\"Close Button\"\r\n\t\t\t\t\t\t\t\ttabIndex={0}\r\n\t\t\t\t\t\t\t\tonClick={closeButtonFunction}\r\n\t\t\t\t\t\t\t\tonKeyPress={(e) => {\r\n\t\t\t\t\t\t\t\t\tif (e.key === 'Enter') {\r\n\t\t\t\t\t\t\t\t\t\ttoggleModalOpen();\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t&times;\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t{isModalOpen && (\r\n\t\t\t\t\t\t\t\t<div className=\"modal-content\">\r\n\t\t\t\t\t\t\t\t\t{props.children}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</FocusTrap>\r\n\t\t\t\t</CSSTransition>\r\n\t\t\t)}\r\n\t\t</TransitionGroup>,\r\n\t\tmodalMount\r\n\t);\r\n};\r\n\r\nModalComponent.propTypes = {\r\n\tisModalOpen: PropTypes.bool.isRequired,\r\n\ttoggleModalOpen: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ModalComponent;\r\n"]},"metadata":{},"sourceType":"module"}
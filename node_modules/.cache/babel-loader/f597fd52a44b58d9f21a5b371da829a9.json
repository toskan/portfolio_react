{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tam\\\\Desktop\\\\portfolio\\\\my-app\\\\src\\\\Work.js\";\nimport React, { useState, useMemo } from 'react';\nimport images from './images';\nimport ModalComponent from './ModalComponent';\nimport UseModal from './UseModal';\nimport './work.css';\nimport ImageGrid from './ImageGrid';\nimport ModalContentFunctions from './ModalContentFunctions';\n\nconst Work = props => {\n  const [Modal, isModalOpen, setIsModalOpen] = UseModal();\n  const firstImages = []; // console.log(workIndex + 'outside');\n\n  for (let i = 0; i < images.length; i++) {\n    firstImages.push(images[i][0]);\n  }\n\n  const [slidesState, setSlide] = useState(null);\n  const [arrIdx, setarrIdx] = useState(null);\n  const [workIndex, setWorkIndex] = useState(null);\n  return useMemo(() => {\n    const toggleModalOpen = () => setIsModalOpen(prev => !prev);\n\n    const setIndex = index => {\n      console.log(workIndex + 'inside setIndex');\n      setSlide(images[workIndex][0]);\n    };\n\n    const forwardSlide = () => {\n      const setArrIdx = () => {\n        setarrIdx(prev => prev++);\n      };\n\n      console.log(workIndex + 'inside forwardSlide');\n      setSlide(images[workIndex][plusArrIdx]);\n    };\n\n    const backSlide = () => {\n      const minusArrIdx = () => {\n        setarrIdx(prev => prev--);\n      };\n\n      setSlide(images[workIndex][minusArrIdx]);\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"work-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(ImageGrid, {\n      firstImages: firstImages,\n      slidesState: slidesState,\n      setIsModalOpen: setIsModalOpen,\n      setIndex: setIndex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(ModalComponent, {\n      setIsModalOpen: setIsModalOpen,\n      isModalOpen: isModalOpen,\n      Modal: Modal,\n      toggleModalOpen: toggleModalOpen,\n      arrIdx: arrIdx,\n      setArrIdx: setArrIdx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(ModalContentFunctions, {\n      toggleModalOpen: toggleModalOpen,\n      slidesState: slidesState,\n      backSlide: backSlide,\n      forwardSlide: forwardSlide,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 6\n      }\n    })));\n  }, [Modal, arrIdx, firstImages, isModalOpen, setIsModalOpen, slidesState, workIndex]);\n};\n\nexport default Work;","map":{"version":3,"sources":["C:/Users/tam/Desktop/portfolio/my-app/src/Work.js"],"names":["React","useState","useMemo","images","ModalComponent","UseModal","ImageGrid","ModalContentFunctions","Work","props","Modal","isModalOpen","setIsModalOpen","firstImages","i","length","push","slidesState","setSlide","arrIdx","setarrIdx","workIndex","setWorkIndex","toggleModalOpen","prev","setIndex","index","console","log","forwardSlide","setArrIdx","plusArrIdx","backSlide","minusArrIdx"],"mappings":"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","sourcesContent":["import React, { useState, useMemo } from 'react';\r\nimport images from './images';\r\nimport ModalComponent from './ModalComponent';\r\nimport UseModal from './UseModal';\r\nimport './work.css';\r\nimport ImageGrid from './ImageGrid';\r\nimport ModalContentFunctions from './ModalContentFunctions';\r\n\r\nconst Work = (props) => {\r\n\tconst [Modal, isModalOpen, setIsModalOpen] = UseModal();\r\n\tconst firstImages = [];\r\n\t// console.log(workIndex + 'outside');\r\n\tfor (let i = 0; i < images.length; i++) {\r\n\t\tfirstImages.push(images[i][0]);\r\n\t}\r\n\tconst [slidesState, setSlide] = useState(null);\r\n\tconst [arrIdx, setarrIdx] = useState(null);\r\n\tconst [workIndex, setWorkIndex] = useState(null);\r\n\treturn useMemo(() => {\r\n\t\tconst toggleModalOpen = () => setIsModalOpen((prev) => !prev);\r\n\t\tconst setIndex = (index) => {\r\n\t\t\tconsole.log(workIndex + 'inside setIndex');\r\n\t\t\tsetSlide(images[workIndex][0]);\r\n\t\t};\r\n\t\tconst forwardSlide = () => {\r\n\t\t\tconst setArrIdx = () => {\r\n\t\t\t\tsetarrIdx((prev) => prev++);\r\n\t\t\t};\r\n\t\t\tconsole.log(workIndex + 'inside forwardSlide');\r\n\t\t\tsetSlide(images[workIndex][plusArrIdx]);\r\n\t\t};\r\n\t\tconst backSlide = () => {\r\n\t\t\tconst minusArrIdx = () => {\r\n\t\t\t\tsetarrIdx((prev) => prev--);\r\n\t\t\t};\r\n\t\t\tsetSlide(images[workIndex][minusArrIdx]);\r\n\t\t};\r\n\t\treturn (\r\n\t\t\t<div className=\"work-div\">\r\n\t\t\t\t<ImageGrid\r\n\t\t\t\t\tfirstImages={firstImages}\r\n\t\t\t\t\tslidesState={slidesState}\r\n\t\t\t\t\tsetIsModalOpen={setIsModalOpen}\r\n\t\t\t\t\tsetIndex={setIndex}\r\n\t\t\t\t/>\r\n\t\t\t\t<ModalComponent\r\n\t\t\t\t\tsetIsModalOpen={setIsModalOpen}\r\n\t\t\t\t\tisModalOpen={isModalOpen}\r\n\t\t\t\t\tModal={Modal}\r\n\t\t\t\t\ttoggleModalOpen={toggleModalOpen}\r\n\t\t\t\t\tarrIdx={arrIdx}\r\n\t\t\t\t\tsetArrIdx={setArrIdx}\r\n\t\t\t\t>\r\n\t\t\t\t\t<ModalContentFunctions\r\n\t\t\t\t\t\ttoggleModalOpen={toggleModalOpen}\r\n\t\t\t\t\t\tslidesState={slidesState}\r\n\t\t\t\t\t\tbackSlide={backSlide}\r\n\t\t\t\t\t\tforwardSlide={forwardSlide}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</ModalComponent>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}, [\r\n\t\tModal,\r\n\t\tarrIdx,\r\n\t\tfirstImages,\r\n\t\tisModalOpen,\r\n\t\tsetIsModalOpen,\r\n\t\tslidesState,\r\n\t\tworkIndex,\r\n\t]);\r\n};\r\n\r\nexport default Work;\r\n"]},"metadata":{},"sourceType":"module"}
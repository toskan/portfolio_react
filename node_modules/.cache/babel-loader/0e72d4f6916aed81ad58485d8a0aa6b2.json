{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tam\\\\Desktop\\\\portfolio\\\\my-app\\\\src\\\\Work.js\";\n// import React from 'react';\nimport React, { useState } from 'react';\nimport images from './images';\nimport ModalComponent from './ModalComponent';\nimport UseModal from './UseModal';\nimport './work.css';\nimport ImageHover from './ImageHover';\n\nconst Work = () => {\n  const [Modal, isModalOpen, setIsModalOpen] = UseModal();\n\n  const toggleModalOpen = () => setIsModalOpen(prev => !prev);\n\n  const firstImages = [];\n  let workIndex = 0;\n  let arrIdx = 0;\n  console.log(workIndex + 'outside');\n\n  for (let i = 0; i < images.length; i++) {\n    firstImages.push(images[i][0]);\n  }\n\n  const [slidesState, setSlide] = useState(null);\n\n  const setIndex = index => {\n    workIndex = index;\n    console.log(workIndex + 'inside');\n    setSlide(images[workIndex][arrIdx]);\n  };\n\n  const forwardSlide = () => {\n    setSlide(images[workIndex][arrIdx++]);\n  };\n\n  const backSlide = () => {\n    setSlide(images[workIndex][arrIdx--]);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"work-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 3\n    }\n  }, firstImages.map((work, i) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid-image-div\",\n      key: `${work}_${i}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(ImageHover, {\n      setIndex: setIndex,\n      work: work,\n      i: i,\n      setIsModalOpen: setIsModalOpen,\n      slidesState: slidesState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }));\n  }), /*#__PURE__*/React.createElement(ModalComponent, {\n    setIsModalOpen: setIsModalOpen,\n    isModalOpen: isModalOpen,\n    Modal: Modal,\n    toggleModalOpen: toggleModalOpen,\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"button-display-topright\",\n    role: \"button\",\n    \"aria-label\": \"Close Button\",\n    tabIndex: 0,\n    onClick: toggleModalOpen,\n    onKeyPress: e => {\n      if (e.key === 'Enter') {\n        toggleModalOpen();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 6\n    }\n  }, \"\\xD7\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slides-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slides-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: slidesState,\n    alt: \"\",\n    className: \"modal-images\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 10\n    }\n  }, \"link\")))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"display-left\",\n    onClick: backSlide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, \"\\u276E\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"display-right\",\n    onClick: forwardSlide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, \"\\u276F\")))));\n};\n\nexport default Work;\n{\n  /* <WorkGrid\r\n  \t\t\tfirstImages={firstImages}\r\n  \t\t\tslidesState={slidesState}\r\n  \t\t\tsetNextSlide={setNextSlide}\r\n  \t\t\tsetIsModalOpen={setIsModalOpen}\r\n  \t\t\tslideHolder={slideHolder}\r\n  \t\t/> */\n}","map":{"version":3,"sources":["C:/Users/tam/Desktop/portfolio/my-app/src/Work.js"],"names":["React","useState","images","ModalComponent","UseModal","ImageHover","Work","Modal","isModalOpen","setIsModalOpen","toggleModalOpen","prev","firstImages","workIndex","arrIdx","console","log","i","length","push","slidesState","setSlide","setIndex","index","forwardSlide","backSlide","map","work","e","key"],"mappings":"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","sourcesContent":["// import React from 'react';\r\nimport React, { useState } from 'react';\r\nimport images from './images';\r\nimport ModalComponent from './ModalComponent';\r\nimport UseModal from './UseModal';\r\nimport './work.css';\r\nimport ImageHover from './ImageHover';\r\n\r\nconst Work = () => {\r\n\tconst [Modal, isModalOpen, setIsModalOpen] = UseModal();\r\n\tconst toggleModalOpen = () => setIsModalOpen((prev) => !prev);\r\n\tconst firstImages = [];\r\n\tlet workIndex = 0;\r\n\tlet arrIdx = 0;\r\n\tconsole.log(workIndex + 'outside');\r\n\tfor (let i = 0; i < images.length; i++) {\r\n\t\tfirstImages.push(images[i][0]);\r\n\t}\r\n\tconst [slidesState, setSlide] = useState(null);\r\n\tconst setIndex = (index) => {\r\n\t\tworkIndex = index;\r\n\t\tconsole.log(workIndex + 'inside');\r\n\t\tsetSlide(images[workIndex][arrIdx]);\r\n\t};\r\n\tconst forwardSlide = () => {\r\n\t\tsetSlide(images[workIndex][arrIdx++]);\r\n\t};\r\n\tconst backSlide = () => {\r\n\t\tsetSlide(images[workIndex][arrIdx--]);\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"work-div\">\r\n\t\t\t{firstImages.map((work, i) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className=\"grid-image-div\" key={`${work}_${i}`}>\r\n\t\t\t\t\t\t<ImageHover\r\n\t\t\t\t\t\t\tsetIndex={setIndex}\r\n\t\t\t\t\t\t\twork={work}\r\n\t\t\t\t\t\t\ti={i}\r\n\t\t\t\t\t\t\tsetIsModalOpen={setIsModalOpen}\r\n\t\t\t\t\t\t\tslidesState={slidesState}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t\t<ModalComponent\r\n\t\t\t\tsetIsModalOpen={setIsModalOpen}\r\n\t\t\t\tisModalOpen={isModalOpen}\r\n\t\t\t\tModal={Modal}\r\n\t\t\t\ttoggleModalOpen={toggleModalOpen}\r\n\t\t\t\tsize=\"large\"\r\n\t\t\t>\r\n\t\t\t\t<div className=\"modal-container\">\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tclassName=\"button-display-topright\"\r\n\t\t\t\t\t\trole=\"button\"\r\n\t\t\t\t\t\taria-label=\"Close Button\"\r\n\t\t\t\t\t\ttabIndex={0}\r\n\t\t\t\t\t\tonClick={toggleModalOpen}\r\n\t\t\t\t\t\tonKeyPress={(e) => {\r\n\t\t\t\t\t\t\tif (e.key === 'Enter') {\r\n\t\t\t\t\t\t\t\ttoggleModalOpen();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t&times;\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<div className=\"slides-content\">\r\n\t\t\t\t\t\t<div className=\"slides-div\">\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tsrc={slidesState}\r\n\t\t\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t\t\t\tclassName=\"modal-images\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t<a href=\"#\">link</a>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<button className=\"display-left\" onClick={backSlide}>\r\n\t\t\t\t\t\t\t&#10094;\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName=\"display-right\"\r\n\t\t\t\t\t\t\tonClick={forwardSlide}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t&#10095;\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</ModalComponent>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Work;\r\n\r\n{\r\n\t/* <WorkGrid\r\n\t\t\t\tfirstImages={firstImages}\r\n\t\t\t\tslidesState={slidesState}\r\n\t\t\t\tsetNextSlide={setNextSlide}\r\n\t\t\t\tsetIsModalOpen={setIsModalOpen}\r\n\t\t\t\tslideHolder={slideHolder}\r\n\t\t\t/> */\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
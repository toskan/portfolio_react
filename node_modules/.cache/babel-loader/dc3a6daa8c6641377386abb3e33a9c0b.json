{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tam\\\\Desktop\\\\portfolio\\\\my-app\\\\src\\\\Work.js\";\nimport React, { useState } from 'react';\nimport images from './images';\nimport ModalComponent from './ModalComponent';\nimport UseModal from './UseModal';\nimport './work.css';\nimport ImageGrid from './ImageGrid';\nimport ModalContent from './ModalContent';\n\nconst Work = () => {\n  const [Modal, isModalOpen, setIsModalOpen] = UseModal();\n  const firstImages = [];\n\n  for (let i = 0; i < images.length; i++) {\n    firstImages.push(images[i][0]);\n  }\n\n  const [slidesState, setSlide] = useState(null);\n  let [arrIdx, setArrIdx] = useState(0);\n  let [workIndex, setWorkIndex] = useState(0);\n\n  const toggleModalOpen = () => setIsModalOpen(prev => !prev);\n\n  const getIndex = index => {\n    setWorkIndex(index);\n    setSlide(images[index][arrIdx]);\n  };\n\n  const forwardSlide = () => {\n    setArrIdx(arrIdx++);\n    setSlide(images[workIndex][arrIdx]);\n  };\n\n  const backSlide = () => {\n    setArrIdx(arrIdx--);\n    setSlide(images[workIndex][arrIdx]);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"work-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(ImageGrid, {\n    firstImages: firstImages,\n    slidesState: slidesState,\n    setIsModalOpen: setIsModalOpen,\n    getIndex: getIndex,\n    isModalOpen: isModalOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(ModalComponent, {\n    setIsModalOpen: setIsModalOpen,\n    isModalOpen: isModalOpen,\n    Modal: Modal,\n    toggleModalOpen: toggleModalOpen,\n    setArrIdx: setArrIdx,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(ModalContent, {\n    toggleModalOpen: toggleModalOpen,\n    slidesState: slidesState,\n    backSlide: backSlide,\n    forwardSlide: forwardSlide,\n    setArrIdx: setArrIdx,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  })));\n};\n\nexport default Work;","map":{"version":3,"sources":["C:/Users/tam/Desktop/portfolio/my-app/src/Work.js"],"names":["React","useState","images","ModalComponent","UseModal","ImageGrid","ModalContent","Work","Modal","isModalOpen","setIsModalOpen","firstImages","i","length","push","slidesState","setSlide","arrIdx","setArrIdx","workIndex","setWorkIndex","toggleModalOpen","prev","getIndex","index","forwardSlide","backSlide"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,YAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAClB,QAAM,CAACC,KAAD,EAAQC,WAAR,EAAqBC,cAArB,IAAuCN,QAAQ,EAArD;AACA,QAAMO,WAAW,GAAG,EAApB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,MAAM,CAACW,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACvCD,IAAAA,WAAW,CAACG,IAAZ,CAAiBZ,MAAM,CAACU,CAAD,CAAN,CAAU,CAAV,CAAjB;AACA;;AACD,QAAM,CAACG,WAAD,EAAcC,QAAd,IAA0Bf,QAAQ,CAAC,IAAD,CAAxC;AACA,MAAI,CAACgB,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC,CAAD,CAAlC;AACA,MAAI,CAACkB,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,CAAD,CAAxC;;AACA,QAAMoB,eAAe,GAAG,MAAMX,cAAc,CAAEY,IAAD,IAAU,CAACA,IAAZ,CAA5C;;AACA,QAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC3BJ,IAAAA,YAAY,CAACI,KAAD,CAAZ;AACAR,IAAAA,QAAQ,CAACd,MAAM,CAACsB,KAAD,CAAN,CAAcP,MAAd,CAAD,CAAR;AACA,GAHD;;AAIA,QAAMQ,YAAY,GAAG,MAAM;AAC1BP,IAAAA,SAAS,CAACD,MAAM,EAAP,CAAT;AACAD,IAAAA,QAAQ,CAACd,MAAM,CAACiB,SAAD,CAAN,CAAkBF,MAAlB,CAAD,CAAR;AACA,GAHD;;AAIA,QAAMS,SAAS,GAAG,MAAM;AACvBR,IAAAA,SAAS,CAACD,MAAM,EAAP,CAAT;AACAD,IAAAA,QAAQ,CAACd,MAAM,CAACiB,SAAD,CAAN,CAAkBF,MAAlB,CAAD,CAAR;AACA,GAHD;;AAIA,sBACC;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,SAAD;AACC,IAAA,WAAW,EAAEN,WADd;AAEC,IAAA,WAAW,EAAEI,WAFd;AAGC,IAAA,cAAc,EAAEL,cAHjB;AAIC,IAAA,QAAQ,EAAEa,QAJX;AAKC,IAAA,WAAW,EAAEd,WALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eAQC,oBAAC,cAAD;AACC,IAAA,cAAc,EAAEC,cADjB;AAEC,IAAA,WAAW,EAAED,WAFd;AAGC,IAAA,KAAK,EAAED,KAHR;AAIC,IAAA,eAAe,EAAEa,eAJlB;AAKC,IAAA,SAAS,EAAEH,SALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOC,oBAAC,YAAD;AACC,IAAA,eAAe,EAAEG,eADlB;AAEC,IAAA,WAAW,EAAEN,WAFd;AAGC,IAAA,SAAS,EAAEW,SAHZ;AAIC,IAAA,YAAY,EAAED,YAJf;AAKC,IAAA,SAAS,EAAEP,SALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPD,CARD,CADD;AA0BA,CAhDD;;AAkDA,eAAeX,IAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport images from './images';\r\nimport ModalComponent from './ModalComponent';\r\nimport UseModal from './UseModal';\r\nimport './work.css';\r\nimport ImageGrid from './ImageGrid';\r\nimport ModalContent from './ModalContent';\r\n\r\nconst Work = () => {\r\n\tconst [Modal, isModalOpen, setIsModalOpen] = UseModal();\r\n\tconst firstImages = [];\r\n\tfor (let i = 0; i < images.length; i++) {\r\n\t\tfirstImages.push(images[i][0]);\r\n\t}\r\n\tconst [slidesState, setSlide] = useState(null);\r\n\tlet [arrIdx, setArrIdx] = useState(0);\r\n\tlet [workIndex, setWorkIndex] = useState(0);\r\n\tconst toggleModalOpen = () => setIsModalOpen((prev) => !prev);\r\n\tconst getIndex = (index) => {\r\n\t\tsetWorkIndex(index);\r\n\t\tsetSlide(images[index][arrIdx]);\r\n\t};\r\n\tconst forwardSlide = () => {\r\n\t\tsetArrIdx(arrIdx++);\r\n\t\tsetSlide(images[workIndex][arrIdx]);\r\n\t};\r\n\tconst backSlide = () => {\r\n\t\tsetArrIdx(arrIdx--);\r\n\t\tsetSlide(images[workIndex][arrIdx]);\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"work-div\">\r\n\t\t\t<ImageGrid\r\n\t\t\t\tfirstImages={firstImages}\r\n\t\t\t\tslidesState={slidesState}\r\n\t\t\t\tsetIsModalOpen={setIsModalOpen}\r\n\t\t\t\tgetIndex={getIndex}\r\n\t\t\t\tisModalOpen={isModalOpen}\r\n\t\t\t/>\r\n\t\t\t<ModalComponent\r\n\t\t\t\tsetIsModalOpen={setIsModalOpen}\r\n\t\t\t\tisModalOpen={isModalOpen}\r\n\t\t\t\tModal={Modal}\r\n\t\t\t\ttoggleModalOpen={toggleModalOpen}\r\n\t\t\t\tsetArrIdx={setArrIdx}\r\n\t\t\t>\r\n\t\t\t\t<ModalContent\r\n\t\t\t\t\ttoggleModalOpen={toggleModalOpen}\r\n\t\t\t\t\tslidesState={slidesState}\r\n\t\t\t\t\tbackSlide={backSlide}\r\n\t\t\t\t\tforwardSlide={forwardSlide}\r\n\t\t\t\t\tsetArrIdx={setArrIdx}\r\n\t\t\t\t/>\r\n\t\t\t</ModalComponent>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Work;\r\n"]},"metadata":{},"sourceType":"module"}
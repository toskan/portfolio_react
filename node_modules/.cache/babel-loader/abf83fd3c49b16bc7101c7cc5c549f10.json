{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tam\\\\Desktop\\\\portfolio\\\\my-app\\\\src\\\\ModalComponent.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport FocusTrap from 'focus-trap-react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nconst modalMount = document.getElementById('modalMount');\n\nconst ModalComponent = props => {\n  const {\n    isModalOpen,\n    toggleModalOpen\n  } = props;\n  return ReactDOM.createPortal( /*#__PURE__*/React.createElement(TransitionGroup, {\n    component: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 3\n    }\n  }, isModalOpen && /*#__PURE__*/React.createElement(CSSTransition, {\n    classNames: \"modal\",\n    in: true,\n    appear: true,\n    timeout: 500,\n    key: `${Date.now()}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FocusTrap, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"modal-slides\",\n    className: \"modal\",\n    onKeyDown: e => {\n      if (e.key === 'Escape') {\n        toggleModalOpen();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, isModalOpen && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, props.children))))), modalMount);\n};\n\nModalComponent.propTypes = {\n  isModalOpen: PropTypes.bool.isRequired,\n  setIsModalOpen: PropTypes.func.isRequired\n};\nexport default ModalComponent;","map":{"version":3,"sources":["C:/Users/tam/Desktop/portfolio/my-app/src/ModalComponent.js"],"names":["React","ReactDOM","PropTypes","FocusTrap","CSSTransition","TransitionGroup","modalMount","document","getElementById","ModalComponent","props","isModalOpen","toggleModalOpen","createPortal","Date","now","e","key","children","propTypes","bool","isRequired","setIsModalOpen","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,wBAA/C;AAEA,MAAMC,UAAU,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAnB;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AACjC,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAmCF,KAAzC;AACA,SAAOT,QAAQ,CAACY,YAAT,eACN,oBAAC,eAAD;AAAiB,IAAA,SAAS,EAAE,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEF,WAAW,iBACX,oBAAC,aAAD;AACC,IAAA,UAAU,EAAC,OADZ;AAEC,IAAA,EAAE,MAFH;AAGC,IAAA,MAAM,EAAE,IAHT;AAIC,IAAA,OAAO,EAAE,GAJV;AAKC,IAAA,GAAG,EAAG,GAAEG,IAAI,CAACC,GAAL,EAAW,EALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AACC,IAAA,EAAE,EAAC,cADJ;AAEC,IAAA,SAAS,EAAC,OAFX;AAGC,IAAA,SAAS,EAAGC,CAAD,IAAO;AACjB,UAAIA,CAAC,CAACC,GAAF,KAAU,QAAd,EAAwB;AACvBL,QAAAA,eAAe;AACf;AACD,KAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASED,WAAW,iBACX;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACED,KAAK,CAACQ,QADR,CAVF,CADD,CAPD,CAFF,CADM,EA8BNZ,UA9BM,CAAP;AAgCA,CAlCD;;AAoCAG,cAAc,CAACU,SAAf,GAA2B;AAC1BR,EAAAA,WAAW,EAAET,SAAS,CAACkB,IAAV,CAAeC,UADF;AAE1BC,EAAAA,cAAc,EAAEpB,SAAS,CAACqB,IAAV,CAAeF;AAFL,CAA3B;AAKA,eAAeZ,cAAf","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport FocusTrap from 'focus-trap-react';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\nconst modalMount = document.getElementById('modalMount');\r\n\r\nconst ModalComponent = (props) => {\r\n\tconst { isModalOpen, toggleModalOpen } = props;\r\n\treturn ReactDOM.createPortal(\r\n\t\t<TransitionGroup component={null}>\r\n\t\t\t{isModalOpen && (\r\n\t\t\t\t<CSSTransition\r\n\t\t\t\t\tclassNames=\"modal\"\r\n\t\t\t\t\tin\r\n\t\t\t\t\tappear={true}\r\n\t\t\t\t\ttimeout={500}\r\n\t\t\t\t\tkey={`${Date.now()}`}\r\n\t\t\t\t>\r\n\t\t\t\t\t<FocusTrap>\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tid=\"modal-slides\"\r\n\t\t\t\t\t\t\tclassName=\"modal\"\r\n\t\t\t\t\t\t\tonKeyDown={(e) => {\r\n\t\t\t\t\t\t\t\tif (e.key === 'Escape') {\r\n\t\t\t\t\t\t\t\t\ttoggleModalOpen();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{isModalOpen && (\r\n\t\t\t\t\t\t\t\t<div className=\"modal-content\">\r\n\t\t\t\t\t\t\t\t\t{props.children}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</FocusTrap>\r\n\t\t\t\t</CSSTransition>\r\n\t\t\t)}\r\n\t\t</TransitionGroup>,\r\n\t\tmodalMount\r\n\t);\r\n};\r\n\r\nModalComponent.propTypes = {\r\n\tisModalOpen: PropTypes.bool.isRequired,\r\n\tsetIsModalOpen: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ModalComponent;\r\n"]},"metadata":{},"sourceType":"module"}
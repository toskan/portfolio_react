{"version":3,"file":"react-router.development.js","sources":["../../packages/react-router/index.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { createMemoryHistory, parsePath } from 'history';\n\nconst readOnly = __DEV__ ? obj => Object.freeze(obj) : obj => obj;\n\nfunction invariant(cond, message) {\n  if (!cond) throw new Error(message);\n}\n\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== 'undefined') console.warn(message);\n\n    try {\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// CONTEXT\n///////////////////////////////////////////////////////////////////////////////\n\nconst LocationContext = React.createContext(null);\n\nif (__DEV__) {\n  LocationContext.displayName = 'Location';\n}\n\nconst RouteContext = React.createContext({\n  outlet: null,\n  params: readOnly({}),\n  pathname: '',\n  route: null\n});\n\nif (__DEV__) {\n  RouteContext.displayName = 'Route';\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// COMPONENTS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * A <Router> that stores all entries in memory.\n */\nexport function MemoryRouter({\n  children,\n  initialEntries,\n  initialIndex,\n  timeout\n}) {\n  let historyRef = React.useRef(null);\n\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({ initialEntries, initialIndex });\n  }\n\n  return (\n    <Router\n      children={children}\n      history={historyRef.current}\n      timeout={timeout}\n    />\n  );\n}\n\nif (__DEV__) {\n  MemoryRouter.displayName = 'MemoryRouter';\n  MemoryRouter.propTypes = {\n    children: PropTypes.node,\n    timeout: PropTypes.number,\n    initialEntries: PropTypes.arrayOf(\n      PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.shape({\n          pathname: PropTypes.string,\n          search: PropTypes.string,\n          hash: PropTypes.string,\n          state: PropTypes.object,\n          key: PropTypes.string\n        })\n      ])\n    ),\n    initialIndex: PropTypes.number\n  };\n}\n\n/**\n * Navigate programmatically using a component.\n */\nexport function Navigate({ to, replace, state }) {\n  let navigate = useNavigate();\n\n  let locationContext = React.useContext(LocationContext);\n  invariant(\n    locationContext != null,\n    // TODO: This error is probably because they somehow have\n    // 2 versions of the router loaded. We can help them understand\n    // how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  warning(\n    !locationContext.history.static,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  React.useEffect(() => {\n    navigate(to, { replace, state });\n  });\n\n  return null;\n}\n\nif (__DEV__) {\n  Navigate.displayName = 'Navigate';\n  Navigate.propTypes = {\n    to: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.shape({\n        pathname: PropTypes.string,\n        search: PropTypes.string,\n        hash: PropTypes.string\n      })\n    ]).isRequired,\n    replace: PropTypes.bool,\n    state: PropTypes.object\n  };\n}\n\n/**\n * Renders the child route's element, if there is one.\n */\nexport function Outlet() {\n  return useOutlet();\n}\n\nif (__DEV__) {\n  Outlet.displayName = 'Outlet';\n  Outlet.propTypes = {};\n}\n\n/**\n * Used in a route config to render an element.\n */\nexport function Route({ element = <Outlet /> }) {\n  return element;\n}\n\nif (__DEV__) {\n  Route.displayName = 'Route';\n  Route.propTypes = {\n    children: PropTypes.node,\n    element: PropTypes.element,\n    path: PropTypes.string\n  };\n}\n\n// TODO: Remove once React.useTransition is stable.\nconst startTransition = tx => tx();\nconst useTransition = React.useTransition || (() => [startTransition, false]);\n\n/**\n * The root context provider. There should be only one of these in a given app.\n */\nexport function Router({ children = null, history, timeout = 2000 }) {\n  let [location, setLocation] = React.useState(history.location);\n  let [startTransition, pending] = useTransition({ timeoutMs: timeout });\n  let shouldListenRef = React.useRef(true);\n\n  invariant(\n    !React.useContext(LocationContext),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You never need more than one.`\n  );\n\n  if (shouldListenRef.current) {\n    shouldListenRef.current = false;\n    history.listen(({ location }) => {\n      startTransition(() => {\n        setLocation(location);\n      });\n    });\n  }\n\n  return (\n    <LocationContext.Provider\n      children={children}\n      value={{ history, location, pending }}\n    />\n  );\n}\n\nif (__DEV__) {\n  Router.displayName = 'Router';\n  Router.propTypes = {\n    children: PropTypes.node,\n    history: PropTypes.shape({\n      action: PropTypes.string,\n      location: PropTypes.object,\n      push: PropTypes.func,\n      replace: PropTypes.func,\n      go: PropTypes.func,\n      listen: PropTypes.func,\n      block: PropTypes.func\n    }),\n    timeout: PropTypes.number\n  };\n}\n\n/**\n * A wrapper for useRoutes that treats its children as route and/or redirect\n * objects.\n */\nexport function Routes({ basename = '', caseSensitive = false, children }) {\n  let routes = createRoutesFromChildren(children);\n  return useRoutes(routes, basename, caseSensitive);\n}\n\nif (__DEV__) {\n  Routes.displayName = 'Routes';\n  Routes.propTypes = {\n    basename: PropTypes.string,\n    caseSensitive: PropTypes.bool,\n    children: PropTypes.node\n  };\n}\n\n/**\n * Utility function that creates a routes config object from a React\n * \"children\" object, which is usually either a React element or an\n * array of elements.\n */\nexport function createRoutesFromChildren(children) {\n  let routes = [];\n\n  React.Children.forEach(children, element => {\n    // Ignore non-elements. This allows people to more\n    // easily inline conditionals in their route config.\n    if (!React.isValidElement(element)) return;\n\n    let { children, path = '/' } = element.props;\n\n    // Transparently support React.Fragment and its children.\n    if (element.type === React.Fragment) {\n      routes.push.apply(routes, createRoutesFromChildren(children));\n      return;\n    }\n\n    let route = { path, element };\n    let childRoutes = createRoutesFromChildren(children);\n    if (childRoutes.length) {\n      route.children = childRoutes;\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// HOOKS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Blocks all navigation attempts. This is useful for preventing the page from\n * changing until some condition is met, like saving form data.\n */\nexport function useBlocker(blocker, when = true) {\n  let locationContext = React.useContext(LocationContext);\n  invariant(\n    locationContext != null,\n    // TODO: This error is probably because they somehow have\n    // 2 versions of the router loaded. We can help them understand\n    // how to avoid that.\n    `useBlocker() may be used only in the context of a <Router> component.`\n  );\n  let { history } = locationContext;\n\n  React.useEffect(() => {\n    if (when) {\n      let unblock = history.block(tx => {\n        let autoUnblockingTx = {\n          ...tx,\n          retry() {\n            // Automatically unblock the transition so it can\n            // play all the way through before retrying it.\n            // TODO: Figure out how to re-enable this block if the\n            // transition is cancelled for some reason.\n            unblock();\n            tx.retry();\n          }\n        };\n\n        blocker(autoUnblockingTx);\n      });\n\n      return unblock;\n    }\n  }, [history, when, blocker]);\n}\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n */\nexport function useHref(to) {\n  let resolvedLocation = useResolvedLocation(to);\n\n  let locationContext = React.useContext(LocationContext);\n  invariant(\n    locationContext != null,\n    // TODO: This error is probably because they somehow have\n    // 2 versions of the router loaded. We can help them understand\n    // how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  return locationContext.history.createHref(resolvedLocation);\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * NOTE: If you're using this it may mean you're doing some of your own \"routing\"\n * in your app, and we'd like to know what your use case is. We may be able to\n * provide something higher-level to better suit your needs.\n */\nexport function useLocation() {\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns true if the URL for the given \"to\" value matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n */\nexport function useMatch(to) {\n  let location = useLocation();\n  let resolvedLocation = useResolvedLocation(to);\n  // TODO: Try to match search + hash as well\n  return location.pathname === resolvedLocation.pathname;\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n */\nexport function useNavigate() {\n  let { pathname } = React.useContext(RouteContext);\n\n  let locationContext = React.useContext(LocationContext);\n  invariant(\n    locationContext != null,\n    // TODO: This error is probably because they somehow have\n    // 2 versions of the router loaded. We can help them understand\n    // how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n  let { history, pending } = locationContext;\n\n  let activeRef = React.useRef(false);\n  React.useEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate = React.useCallback(\n    (to, { replace, state } = {}) => {\n      if (activeRef.current) {\n        if (typeof to === 'number') {\n          history.go(to);\n        } else {\n          let relativeTo = resolveLocation(to, pathname);\n          // If we are pending transition, use REPLACE instead of PUSH.\n          // This will prevent URLs that we started navigating to but\n          // never fully loaded from appearing in the history stack.\n          let method = !!replace || pending ? 'replace' : 'push';\n          history[method](relativeTo, state);\n        }\n      } else {\n        warning(\n          false,\n          `You should call navigate() in a useEffect, not when ` +\n            `your component is first rendered.`\n        );\n      }\n    },\n    [history, pathname, pending]\n  );\n\n  return navigate;\n}\n\n/**\n * Returns the outlet element at this level of the route hierarchy. Used to\n * render child routes.\n */\nexport function useOutlet() {\n  return React.useContext(RouteContext).outlet;\n}\n\n/**\n * Returns a hash of the dynamic params that were matched in the route path.\n * This is useful for using ids embedded in the URL to fetch data, but we\n * eventually want to provide something at a higher level for this.\n */\nexport function useParams() {\n  return React.useContext(RouteContext).params;\n}\n\n/**\n * Returns a fully-resolved location object relative to the current location.\n */\nexport function useResolvedLocation(to) {\n  let { pathname } = React.useContext(RouteContext);\n  return React.useMemo(() => resolveLocation(to, pathname), [to, pathname]);\n}\n\nlet missingTrailingSplatWarnings, warnAboutMissingTrailingSplatAt;\nif (__DEV__) {\n  missingTrailingSplatWarnings = {};\n  warnAboutMissingTrailingSplatAt = (pathname, cond, message) => {\n    if (!cond && !missingTrailingSplatWarnings[pathname]) {\n      missingTrailingSplatWarnings[pathname] = true;\n      warning(false, message);\n    }\n  };\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * Route objects may take one of 2 forms:\n *\n * - { path, element, children }\n * - { path, redirectTo }\n *\n * We should probably write this up in TypeScript instead of in a comment. In\n * fact, what am I even doing here. Nobody is ever going to read this.\n */\nexport function useRoutes(routes, basename = '', caseSensitive = false) {\n  let {\n    params: parentParams,\n    pathname: parentPathname,\n    route: parentRoute\n  } = React.useContext(RouteContext);\n\n  if (warnAboutMissingTrailingSplatAt) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since\n    // we cannot even give the warning unless they land at the parent route.\n    let parentPath = parentRoute && parentRoute.path;\n    warnAboutMissingTrailingSplatAt(\n      parentPathname,\n      !parentRoute || parentRoute.path.endsWith('*'),\n      `You rendered descendant <Routes> (or called \\`useRoutes\\`) at \"${parentPathname}\"` +\n        ` (under <Route path=\"${parentPath}\">) but the parent route path has no trailing \"*\".` +\n        ` This means if you navigate deeper, the parent won't match anymore and therefore` +\n        ` the child routes will never render.` +\n        `\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route path=\"${parentPath}/*\">.`\n    );\n  }\n\n  basename = basename ? joinPaths([parentPathname, basename]) : parentPathname;\n\n  let location = useLocation();\n  let matches = React.useMemo(\n    () => matchRoutes(routes, location, basename, caseSensitive),\n    [routes, location, basename, caseSensitive]\n  );\n\n  if (!matches) {\n    // TODO: Warn about nothing matching, suggest using a catch-all route.\n    return null;\n  }\n\n  // TODO: Initiate preload sequence here.\n\n  // Otherwise render an element.\n  let element = matches.reduceRight((outlet, { params, pathname, route }) => {\n    return (\n      <RouteContext.Provider\n        children={route.element}\n        value={{\n          outlet,\n          params: readOnly({ ...parentParams, ...params }),\n          pathname: joinPaths([basename, pathname]),\n          route\n        }}\n      />\n    );\n  }, null);\n\n  return element;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Matches the given routes to a location and returns the match data.\n */\nexport function matchRoutes(\n  routes,\n  location,\n  basename = '',\n  caseSensitive = false\n) {\n  if (typeof location === 'string') {\n    location = parsePath(location);\n  }\n\n  // TODO: Validate location\n  // - it should have a pathname\n  let base = basename.replace(/^\\/+|\\/+$/g, '');\n  let target = location.pathname.slice(1);\n\n  if (base) {\n    if (base === target) {\n      target = '';\n    } else if (target.startsWith(base)) {\n      target = target.slice(base.length).replace(/^\\/+/, '');\n    } else {\n      return null;\n    }\n  }\n\n  let flattenedRoutes = flattenRoutes(routes);\n\n  // TODO: Validate the routes config\n  // - routes should all have paths and elements\n  // - redirects should have a redirectTo\n  // - redirects should not have children\n  // - warn about unreachable routes\n\n  rankFlattenedRoutes(flattenedRoutes);\n\n  for (let i = 0; i < flattenedRoutes.length; ++i) {\n    let [path, flatRoutes] = flattenedRoutes[i];\n\n    // TODO: Match on search, state too\n    let [matcher] = compilePath(path, /* end */ true, caseSensitive);\n\n    if (matcher.test(target)) {\n      return flatRoutes.map((route, index) => {\n        let routes = flatRoutes.slice(0, index + 1);\n        let path = joinPaths(routes.map(r => r.path));\n        let [matcher, keys] = compilePath(path, /* end */ false, caseSensitive);\n        let match = target.match(matcher);\n        let pathname = '/' + match[1];\n        let values = match.slice(2);\n        let params = keys.reduce((memo, key, index) => {\n          memo[key] = safelyDecodeURIComponent(values[index], key);\n          return memo;\n        }, {});\n\n        return { params, pathname, route };\n      });\n    }\n  }\n\n  return null;\n}\n\nfunction safelyDecodeURIComponent(value, paramName) {\n  try {\n    return decodeURIComponent(value.replace(/\\+/g, ' '));\n  } catch (error) {\n    warning(\n      false,\n      `The value for the URL param \"${paramName}\" will not be decoded because` +\n        ` the string \"${value}\" is a malformed URL segment. This is probably` +\n        ` due to a bad percent encoding (the error message was: ${error.message}).`\n    );\n\n    return value;\n  }\n}\n\nfunction flattenRoutes(\n  routes,\n  flattenedRoutes = [],\n  parentPath = '',\n  parentRoutes = [],\n  parentIndexes = []\n) {\n  routes.forEach((route, index) => {\n    let path = joinPaths([parentPath, route.path]);\n    let routes = parentRoutes.concat(route);\n    let indexes = parentIndexes.concat(index);\n\n    flattenedRoutes.push([path, routes, indexes]);\n\n    if (route.children) {\n      flattenRoutes(route.children, flattenedRoutes, path, routes, indexes);\n    }\n  });\n\n  return flattenedRoutes;\n}\n\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = s => s === '*';\n\nfunction computeScore(path) {\n  let segments = path.split('/');\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  return segments\n    .filter(s => !isSplat(s))\n    .reduce(\n      (score, segment) =>\n        score +\n        (paramRe.test(segment)\n          ? dynamicSegmentValue\n          : segment === ''\n          ? emptySegmentValue\n          : staticSegmentValue),\n      initialScore\n    );\n}\n\nfunction rankFlattenedRoutes(flattenedRoutes) {\n  let pathScores = flattenedRoutes.reduce((memo, [path]) => {\n    memo[path] = computeScore(path);\n    return memo;\n  }, {});\n\n  flattenedRoutes.sort((a, b) => {\n    let [aPath, , aIndexes] = a;\n    let aScore = pathScores[aPath];\n\n    let [bPath, , bIndexes] = b;\n    let bScore = pathScores[bPath];\n\n    return aScore !== bScore\n      ? bScore - aScore // Higher score first\n      : compareIndexes(aIndexes, bIndexes);\n  });\n}\n\nfunction compareIndexes(a, b) {\n  let siblings =\n    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n\n  return siblings\n    ? a[a.length - 1] - b[b.length - 1] // Earlier siblings come first\n    : 0; // It doesn't make sense to rank non-siblings by index, so they sort equal\n}\n\nfunction compilePath(path, end, caseSensitive) {\n  let keys = [];\n  let pattern =\n    '^(' +\n    path\n      .replace(/^\\/+/, '') // Ignore leading /\n      .replace(/\\*\\//g, '') // Ignore */ (from paths nested under a *)\n      .replace(/\\/?\\*?$/, '') // Ignore trailing /*, we'll handle it below\n      .replace(/[\\\\.*+^$?{}|()[\\]]/g, '\\\\$&') // Escape special regex chars\n      .replace(/:(\\w+)/g, (_, key) => {\n        keys.push(key);\n        return '([^\\\\/]+)';\n      }) +\n    ')';\n\n  if (path.endsWith('*')) {\n    if (path.endsWith('/*')) {\n      pattern += '\\\\/?'; // Don't include the / in params['*']\n    }\n    keys.push('*');\n    pattern += '(.*)';\n  } else if (end) {\n    pattern += '\\\\/?';\n  }\n\n  if (end) pattern += '$';\n\n  let flags = caseSensitive ? undefined : 'i';\n  let matcher = new RegExp(pattern, flags);\n\n  return [matcher, keys];\n}\n\nconst trimTrailingSlashes = path => path.replace(/\\/+$/, '');\nconst normalizeSlashes = path => path.replace(/\\/\\/+/g, '/');\nconst joinPaths = paths => normalizeSlashes(paths.join('/'));\nconst splitPath = path => normalizeSlashes(path).split('/');\n\nfunction resolvePathname(toPathname, fromPathname) {\n  let segments = splitPath(trimTrailingSlashes(fromPathname));\n  let relativeSegments = splitPath(toPathname);\n\n  relativeSegments.forEach(segment => {\n    if (segment === '..') {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== '.') {\n      segments.push(segment);\n    }\n  });\n\n  return segments.length > 1 ? joinPaths(segments) : '/';\n}\n\n/**\n * Returns a fully resolve location object relative to the given pathname.\n */\nexport function resolveLocation(to, fromPathname = '/') {\n  let { pathname: toPathname, search = '', hash = '' } =\n    typeof to === 'string' ? parsePath(to) : to;\n\n  let pathname = toPathname\n    ? toPathname.startsWith('/')\n      ? resolvePathname(toPathname, '/')\n      : resolvePathname(toPathname, fromPathname)\n    : fromPathname;\n\n  return { pathname, search, hash };\n}\n\n/**\n * Creates a path with params interpolated.\n */\nexport function generatePath(pathname, params = {}) {\n  return pathname\n    .replace(/:(\\w+)/g, (_, key) => params[key] || `:${key}`)\n    .replace(/\\*$/, splat => params[splat] || splat);\n}\n"],"names":["invariant","cond","message","Error","warning","console","e","LocationContext","outlet","params","obj","pathname","route","RouteContext","MemoryRouter","children","initialEntries","initialIndex","timeout","historyRef","React","createMemoryHistory","createElement","Router","history","PropTypes","search","hash","state","key","Navigate","to","replace","navigate","useNavigate","locationContext","Outlet","useOutlet","Route","element","path","location","setLocation","startTransition","pending","useTransition","timeoutMs","shouldListenRef","Provider","value","action","push","go","listen","block","Routes","basename","caseSensitive","routes","createRoutesFromChildren","useRoutes","childRoutes","useLocation","activeRef","relativeTo","resolveLocation","method","useResolvedLocation","missingTrailingSplatWarnings","warnAboutMissingTrailingSplatAt","parentParams","parentPathname","parentRoute","parentPath","paths","matches","matchRoutes","parsePath","base","target","flattenedRoutes","flattenRoutes","rankFlattenedRoutes","i","flatRoutes","matcher","compilePath","index","r","keys","match","values","memo","decodeURIComponent","error","safelyDecodeURIComponent","parentRoutes","parentIndexes","indexes","computeScore","segments","initialScore","isSplat","s","score","segment","paramRe","pathScores","a","b","aPath","aIndexes","aScore","bPath","bIndexes","bScore","compareIndexes","siblings","n","end","pattern","_","RegExp","undefined","resolvePathname","toPathname","fromPathname","relativeSegments","generatePath","splat","useBlocker","blocker","when","unblock","tx","autoUnblockingTx","retry","useHref","resolvedLocation","useMatch","useParams"],"mappings":"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"}
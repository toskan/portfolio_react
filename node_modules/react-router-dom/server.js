'use strict';Object.defineProperty(exports,"__esModule",{value:!0});function _interopDefault(d){return d&&"object"===typeof d&&"default"in d?d["default"]:d}var React=_interopDefault(require("react")),reactRouterDom=require("react-router-dom"),history=require("history"),PropTypes=_interopDefault(require("prop-types"));
function StaticRouter({children:d,context:e={},location:c="/"}){function f(a,b){return{...g,..."string"===typeof a?history.parsePath(a):a,state:b}}"string"===typeof c&&(c=history.parsePath(c));let g={pathname:c.pathname||"/",search:c.search||"",hash:c.hash||"",state:c.state||null,key:c.key||"default"};return React.createElement(reactRouterDom.Router,{children:d,history:{get action(){return"POP"},get location(){return g},createHref(a){return"string"===typeof a?a:history.createPath(a)},push(a,b){a=
f(a,b);"production"!==process.env.NODE_ENV&&(b=history.createPath(a),console.warn("You cannot perform a PUSH with a <StaticRouter>. You probably want a REPLACE instead."+`\n\nTo avoid this warning, find the element that is calling \`navigate("${b}")\``+` and change it to \`navigate("${b}", { replace: true })\`. This could also be`+` caused by rendering a \`<Navigate to={"${b}"} />\`. In that case, just add a `+"`replace={true}` prop to do a redirect instead."));e.url=history.createPath(a);e.state=
a.state},replace(a,b){a=f(a,b);e.url=history.createPath(a);e.state=a.state},go(a){throw Error(`You cannot perform ${-1===a?"GO BACK":`GO(${a})`} on the `+"server because it is a stateless environment. This error was probably "+`triggered when you did a \`navigate(${a})\` somewhere in your app.`);},listen(){},block(){},static:!0}})}
"production"!==process.env.NODE_ENV&&(StaticRouter.displayName="StaticRouter",StaticRouter.propTypes={children:PropTypes.node,location:PropTypes.oneOfType([PropTypes.shape({pathname:PropTypes.string,search:PropTypes.string,hash:PropTypes.string,state:PropTypes.object,key:PropTypes.string}),PropTypes.string])});exports.StaticRouter=StaticRouter;

import{Router,useHref,useNavigate,useLocation,useResolvedLocation,useMatch,useBlocker}from'react-router';import{createBrowserHistory,createHashHistory}from'history';import PropTypes from'prop-types';import React from'react';export{MemoryRouter,Navigate,Outlet,Route,Router,Routes,createRoutesFromChildren,generatePath,matchRoutes,resolveLocation,useBlocker,useHref,useLocation,useMatch,useNavigate,useOutlet,useParams,useResolvedLocation,useRoutes}from'react-router';function h(a,b){if(!a){"undefined"!==typeof console&&console.warn(b);try{throw Error(b);}catch(d){}}}function k({children:a,timeout:b,window:d}){let c=React.useRef(null);null==c.current&&(c.current=createBrowserHistory({window:d}));return React.createElement(Router,{children:a,history:c.current,timeout:b})}k.displayName="BrowserRouter";k.propTypes={children:PropTypes.node,timeout:PropTypes.number,window:PropTypes.object};
function l({children:a,timeout:b,window:d}){let c=React.useRef(null);null==c.current&&(c.current=createHashHistory({window:d}));return React.createElement(Router,{children:a,history:c.current,timeout:b})}l.displayName="HashRouter";l.propTypes={children:PropTypes.node,timeout:PropTypes.number,window:PropTypes.object};
let r=React.forwardRef(function({as:a="a",onClick:b,replace:d=!1,state:c,target:f,to:e,...m},n){let g=useHref(e),w=useNavigate(),p=useLocation(),q=useResolvedLocation(e);return React.createElement(a,Object.assign({},m,{href:g,onClick:function(a){b&&b(a);a.defaultPrevented||0!==a.button||f&&"_self"!==f||a.metaKey||a.altKey||a.ctrlKey||a.shiftKey||(a.preventDefault(),a=q.pathname===p.pathname&&q.search===p.search&&q.hash===p.hash,w(e,{replace:!!d||a,state:c}))},ref:n,target:f}))});r.displayName="Link";
r.propTypes={as:PropTypes.elementType,onClick:PropTypes.func,replace:PropTypes.bool,state:PropTypes.object,target:PropTypes.string,to:PropTypes.oneOfType([PropTypes.string,PropTypes.shape({pathname:PropTypes.string,search:PropTypes.string,hash:PropTypes.string})]).isRequired};
let t=React.forwardRef(function({"aria-current":a="page",activeClassName:b="active",activeStyle:d=null,className:c="",style:f=null,to:e,...m},n){let g=useMatch(e);a=g?a:void 0;b=[c,g?b:null].filter(Boolean).join(" ");return React.createElement(r,Object.assign({},m,{"aria-current":a,className:b,ref:n,style:{...f,...g?d:null},to:e}))});t.displayName="NavLink";
t.propTypes={...r.propTypes,"aria-current":PropTypes.oneOf("page step location date time true".split(" ")),activeClassName:PropTypes.string,activeStyle:PropTypes.object,className:PropTypes.string,style:PropTypes.object,to:PropTypes.oneOfType([PropTypes.string,PropTypes.shape({pathname:PropTypes.string,search:PropTypes.string,hash:PropTypes.string})]).isRequired};function u({message:a,when:b}){v(a,b);return null}u.displayName="Prompt";u.propTypes={message:PropTypes.string,when:PropTypes.bool};
function v(a,b){let d=React.useCallback(b=>{window.confirm(a)&&b.retry()},[a]);useBlocker(d,b)}

function useSearchParams(){h("undefined"!==typeof URLSearchParams,"You cannot use the `useSearchParams` hook in a browser that does not support the URLSearchParams API. If you need to support Internet Explorer 11, we recommend you load a polyfill such as https://github.com/ungap/url-search-params\n\nIf you're unsure how to load polyfills, we recommend you check out https://polyfill.io/v3/ which provides some recommendations about how to load polyfills only for users that need them, instead of for every user.");let a=
useLocation();return React.useMemo(()=>new URLSearchParams(a.search),[a.search])};export{k as BrowserRouter,l as HashRouter,r as Link,t as NavLink,u as Prompt,v as usePrompt,useSearchParams}
//# sourceMappingURL=react-router-dom.development.js.map
